# dockerfile-ros2-real (ARM64-friendly)
FROM ros:humble-ros-base

SHELL ["/bin/bash", "-c"]
ENV DEBIAN_FRONTEND=noninteractive
ENV RMW_IMPLEMENTATION=rmw_cyclonedds_cpp

WORKDIR /ros2_ws

# Deps (keep one apt layer)
RUN apt-get update && apt-get upgrade -y && apt-get install -y --no-install-recommends \
    git build-essential lsb-release \
    libboost-all-dev libpcap-dev libpcl-dev v4l-utils \
    python3-pip python3-setuptools python3-colcon-common-extensions python3-rosdep \
    ros-humble-xacro \
    ros-humble-tf2-ros ros-humble-tf2-tools ros-humble-tf2-geometry-msgs ros-humble-tf2-eigen \
    ros-humble-joint-state-publisher ros-humble-pcl-conversions \
    ros-humble-pluginlib ros-humble-diagnostic-updater \
    ros-humble-image-transport-plugins ros-humble-v4l2-camera \
    ros-humble-rmw-cyclonedds-cpp ros-humble-cyclonedds \
 && python3 -m pip install --no-cache-dir pyserial \
 && rm -rf /var/lib/apt/lists/*

# Sources
RUN mkdir -p /ros2_ws/src && cd /ros2_ws/src && \
    git clone --depth=1 https://github.com/bhmoon713/fastbot_bringup.git && \
    git clone --depth=1 https://github.com/bhmoon713/fastbot_description_cp22.git fastbot_description && \
    git clone --depth=1 https://github.com/bhmoon713/serial_motor.git && \
    git clone --depth=1 https://github.com/bhmoon713/serial_motor_msgs.git && \
    git clone --depth=1 -b N10_V1.0 https://github.com/Lslidar/Lslidar_ROS2_driver.git

# (If you truly need these Gazebo assets, but Gazebo isn't installed in this image, it's okay to just stage them)
RUN mkdir -p /usr/share/gazebo-11/models/fastbot_description && \
    cp -a /ros2_ws/src/fastbot_description/. /usr/share/gazebo-11/models/fastbot_description/

WORKDIR /ros2_ws/src
RUN mkdir -p Lslidar_ROS2_driver/lslidar_driver/params Lslidar_ROS2_driver/lslidar_driver/launch fastbot_description/models

# NOTE: these COPY paths must exist in your *build context*. Adjust if your build context differs.
COPY fastbot_ros2_docker/real/lsx10.yaml        Lslidar_ROS2_driver/lslidar_driver/params/
COPY fastbot_ros2_docker/real/lslidar_launch.py Lslidar_ROS2_driver/lslidar_driver/launch/
RUN mkdir -p /boot/firmware && true
COPY fastbot_ros2_docker/real/config.txt        /boot/firmware/

# rosdep (inside container it's fine to skip init and just update)
RUN apt-get update && rosdep update && \
    rosdep install --from-paths /ros2_ws/src --ignore-src -r -y && \
    rm -rf /var/lib/apt/lists/*

# Build
WORKDIR /ros2_ws
RUN source /opt/ros/humble/setup.bash && colcon build --symlink-install

# Optional: place your Cyclone DDS config in the image so you don't need a bind mount
# COPY fastbot_ros2_docker/real/cyclonedds.xml /etc/cyclonedds.xml

# Entrypoint + default command
COPY fastbot_ros2_docker/real/ros_entrypoint.sh /ros_entrypoint.sh
RUN chmod +x /ros_entrypoint.sh
ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["ros2","launch","fastbot_bringup","bringup.launch.xml"]
