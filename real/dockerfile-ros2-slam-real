# dockerfile-ros2-slam-real (ARM64-friendly, headless-ready)
FROM ros:humble-ros-base

SHELL ["/bin/bash","-c"]
ENV DEBIAN_FRONTEND=noninteractive
ENV RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
WORKDIR /ros2_ws

# Core deps for SLAM / Nav2 (no GUI by default; add rviz2 only if you’ll display on the Pi)
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3-colcon-common-extensions build-essential python3-rosdep \
    ros-humble-cartographer-ros ros-humble-cartographer \
    ros-humble-slam-toolbox \
    ros-humble-nav2-bringup ros-humble-navigation2 \
    ros-humble-robot-state-publisher ros-humble-tf2-ros \
    ros-humble-rmw-cyclonedds-cpp ros-humble-cyclonedds \
 && rm -rf /var/lib/apt/lists/*

# (Optional) if you want RViz on the Pi display:
# RUN apt-get update && apt-get install -y --no-install-recommends ros-humble-rviz2 && rm -rf /var/lib/apt/lists/*

# Sources
RUN mkdir -p /ros2_ws/src && cd /ros2_ws/src && \
    git clone --depth=1 https://github.com/bhmoon713/fastbot_description_cp22.git fastbot_description && \
    git clone --depth=1 https://github.com/bhmoon713/fastbot_slam.git

# Resolve package deps discovered via package.xml
RUN apt-get update && rosdep update && \
    rosdep install --from-paths /ros2_ws/src --ignore-src -r -y && \
    rm -rf /var/lib/apt/lists/*

# Build
RUN source /opt/ros/humble/setup.bash && colcon build --symlink-install

# (Optional) bake a Cyclone DDS config so you don’t need to bind-mount it
# COPY fastbot_ros2_docker/real/cyclonedds.xml /etc/cyclonedds.xml

# Entrypoint + default command (cartographer by default)
COPY fastbot_ros2_docker/real/ros_entrypoint.sh /ros_entrypoint.sh
RUN chmod +x /ros_entrypoint.sh
ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["ros2","launch","fastbot_slam","cartographer.launch.py"]
