version: "3"

services:
  fastbot-ros2-gazebo:
    build:
      context: ${HOME}/ros2_ws/src
      dockerfile: fastbot_ros2_docker/simulation/dockerfile-gazebo
    image: bhmoon418/bhmoon713-cp22:fastbot-ros2-gazebo
    privileged: true
    cap_add:
      - NET_ADMIN
    container_name: fastbot-ros2-gazebo
    network_mode: host
    environment:
      - DISPLAY=${DISPLAY}
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_DOMAIN_ID=1
      - GAZEBO_MODEL_PATH=/ros2_ws/src/
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    command: bash -c "source /opt/ros/humble/setup.bash && source /ros2_ws/install/setup.bash && ros2 launch fastbot_gazebo one_fastbot_room.launch.py"
  
  fastbot-ros2-slam:
    build:
      context: ${HOME}/ros2_ws/src
      dockerfile: fastbot_ros2_docker/simulation/dockerfile-slam
    image: bhmoon418/bhmoon713-cp22:fastbot-ros2-slam
    container_name: fastbot-ros2-slam
    network_mode: host
    depends_on:
      - fastbot-ros2-gazebo

    environment:
      - DISPLAY=${DISPLAY}
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_DOMAIN_ID=1
      - GAZEBO_MODEL_PATH=${GAZEBO_MODEL_PATH}:/ros2_ws/src/
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    command:  bash -c "source /opt/ros/humble/setup.bash && source /ros2_ws/install/setup.bash && ros2 launch fastbot_slam cartographer.launch.py"

  fastbot-ros2-webapp:
    build:
      context: ${HOME}/ros2_ws/src
      dockerfile: fastbot_ros2_docker/simulation/dockerfile-webapp
    image: bhmoon418/bhmoon713-cp22:fastbot-ros2-webapp
    container_name: nginx_container
    hostname: nginx_container
    network_mode: host
    restart: always
    environment:
      - DISPLAY=${DISPLAY}
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_DOMAIN_ID=1
      - GAZEBO_MODEL_PATH=${GAZEBO_MODEL_PATH}:/ros2_ws/src/
    depends_on:
      - fastbot-ros2-slam
    volumes:
      - ${HOME}/ros2_ws/src/fastbot_webapp:/usr/share/nginx/html:ro
      - logs:/var/log/nginx
    ports:
      - "7000:80"
      - "9090:9090"  # expose rosbridge websocket if needed

volumes:
  logs: {}
